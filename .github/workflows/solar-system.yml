name: Solar System Workflows


on:
 workflow_dispatch:
  inputs:
    run-job:
      required: true
      type: choice
      options:
        - unit-testing
        - code-coverage
        - docker
 schedule:
   - cron: "*/1 * * * *"  # Every Saturday at 5 PM UTC        
#  push:
#    branches:
#      - main
#      - 'feature/*'
   

env:
   MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
   MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
   MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
  #  RUN_UNIT_TESTS: ${{ github.event_name == 'schedule' || github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}     

jobs:
 run-script:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' }}
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
      with: { ref: debug }
    - name: List files 
      run: ls

 unit-testing:
   runs-on: ubuntu-latest
   if: ${{ github.event_name == 'push' || github.event.inputs['run-job'] == 'unit-testing' }}
   steps:
     - name: Checkout Code
       uses: actions/checkout@v2
    
     - name: Set up Node.js
       uses: actions/setup-node@v3  #
       with:
         node-version: 18
    
     - name: Install dependencies
       run: npm install
    
     - name: Run Unit Tests
       run: npm test
    
     - name: Archive Test Result
       uses: actions/upload-artifact@v3
       with:
         name: Mocha-Test-Result
         path: test-results.xml
 code-coverage:
   runs-on: ubuntu-latest
   if: ${{ github.event_name == 'push' || github.event.inputs['run-job'] == 'code-coverage' }}
   steps:
     - name: Checkout Code
       uses: actions/checkout@v2
    
     - name: Set up Node.js
       uses: actions/setup-node@v3
       with:
         node-version: 18
    
     - name: Install dependencies
       run: npm install
     
     - name: Check Coverage
       continue-on-error: true
       run: npm run coverage
       
    
     - name: Archive Test Results
       uses: actions/upload-artifact@v3
       with:
         name: Code-Coverage-Report
         path: coverage
         retention-days: 5
 docker:
   name: Containerization
   needs:
      - unit-testing
      - code-coverage
   runs-on: ubuntu-latest
   if: ${{ github.event_name == 'push' || github.event.inputs['run-job'] == 'docker' }}
   steps:
    - name: Checkout Repo
      uses: actions/checkout@v4

    - name: Login to Docker
      uses: docker/login-action@v3
      with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}